version: "3"
services:
  zookeeper:
    image: bitnami/zookeeper
    ports:
      - 2181:2181
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"

  kafka:
    image: bitnami/kafka
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: -1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_LISTENERS: PLAINTEXT://:9092, PLAINTEXT_HOST://:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_NUM_NETWORK_THREADS: 3
      KAFKA_NUM_IO_THREADS: 3
      KAFKA_HEAP_OPTS: -Xmx2048m -Xms2048m

  kafka_web:
    build: web
    ports:
      - 8080:8080
    volumes:
      - web-data:/app/data

  consumer_statistics:
    build:
      context: .
      dockerfile: social-network-analysis/Dockerfile
    ports:
      - 8081:8081
    command:
      [
        "job-cluster",
        "-j",
        "ch.ethz.infk.dspa.App",
        "-kafka",
        "kafka:9092",
        "-analyticstype",
        "activeposts",
        "-maxdelaysec",
        "600",
      ]
    # volumes..

  consumer_recommendations:
    build:
      context: .
      dockerfile: social-network-analysis/Dockerfile
    ports:
      - 8082:8081
    command:
      [
        "job-cluster",
        "-j",
        "ch.ethz.infk.dspa.App",
        "-kafka",
        "kafka:9092",
        "-analyticstype",
        "recommendations",
        "-maxdelaysec",
        "600",
      ]

  consumer_anomalies:
    build:
      context: .
      dockerfile: social-network-analysis/Dockerfile
    ports:
      - 8083:8081
    command:
      [
        "job-cluster",
        "-j",
        "ch.ethz.infk.dspa.App",
        "-kafka",
        "kafka:9092",
        "-analyticstype",
        "anomalies",
        "-maxdelaysec",
        "600",
      ]

  producer_post:
    build:
      context: .
      dockerfile: stream-producer/Dockerfile
    volumes:
      - ./data:/data:ro
    command:
      [
        "java",
        "-jar",
        "/opt/producer.jar",
        "-file",
        "/data/1k-users-sorted/streams/post_event_stream.csv",
        "-schema",
        "/data/schema/avro/post.avsc",
        "-topic",
        "post",
        "-kafkaserver",
        "kafka:9092",
        "-speedup",
        "60",
        "-rdelay",
        "5",
        "-sdelay",
        "600",
        "-seed",
        "1",
        "-worker",
        "2",
      ]

  producer_like:
    build:
      context: .
      dockerfile: stream-producer/Dockerfile
    volumes:
      - ./data:/data:ro
    command:
      [
        "java",
        "-jar",
        "/opt/producer.jar",
        "-file",
        "/data/1k-users-sorted/streams/likes_event_stream.csv",
        "-schema",
        "/data/schema/avro/like.avsc",
        "-topic",
        "post",
        "-kafkaserver",
        "kafka:9092",
        "-speedup",
        "60",
        "-rdelay",
        "5",
        "-sdelay",
        "600",
        "-seed",
        "2",
        "-worker",
        "2",
      ]

  producer_comment:
    build:
      context: .
      dockerfile: stream-producer/Dockerfile
    volumes:
      - ./data:/data:ro
    command:
      [
        "java",
        "-jar",
        "/opt/producer.jar",
        "-file",
        "/data/1k-users-sorted/streams/comment_event_stream_cleaned.csv",
        "-schema",
        "/data/schema/avro/comment.avsc",
        "-topic",
        "post",
        "-kafkaserver",
        "kafka:9092",
        "-speedup",
        "60",
        "-rdelay",
        "5",
        "-sdelay",
        "600",
        "-seed",
        "3",
        "-worker",
        "2",
      ]

volumes:
  web-data:
